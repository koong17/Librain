<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="lib.employee.book.model.EmpBookDAO">
	
	<select id="rentBookCheck" resultType="lib.employee.book.model.EmpBookDTO" parameterType="int">
		select * from
		    (select rownum rnum, b.book_num, book_author, book_pub_house, book_name, book_pub_date, book_ISBN, book_apdx_status, book_rsrv_status, book_ctgr_num, 
		            decode(rent_enddate,'o','대여중','대여가능') rent
		            from  (select * from book where book_num = #{ book_num }) b
		            left outer join (select book_num, nvl(to_char(rent_enddate),'o') rent_enddate from rental where rent_startdate in (select max(rent_startdate) from rental group by book_num))  r  
		            on (b.book_num = r.book_num))
	</select>	
	
	<select id="selectRowNum" resultType="int">
		select nvl(max(rnum),0) from
		    (select rownum rnum, b.book_num, book_author, book_pub_house, book_name, book_pub_date, book_ISBN, book_apdx_status, book_rsrv_status, book_ctgr_num, 
		            decode(rent_enddate,'o','대여중','대여가능') rent
		            from  book b 
		            left outer join (select book_num, nvl(to_char(rent_enddate),'o') rent_enddate from rental where rent_startdate in (select max(rent_startdate) from rental group by book_num))  r  
		            on (b.book_num = r.book_num))
	</select>	
	
	<select id="select" resultType="lib.employee.book.model.EmpBookDTO" parameterType="int">
	<![CDATA[
		select * from
		   (select rownum rnum, b.book_num, book_author, book_pub_house, book_name, book_pub_date, book_ISBN, book_apdx_status, book_rsrv_status, book_ctgr_num, book_input_date,
		           decode(rent_enddate,'o','대여중','대여가능') rent
		           from  (select * from book order by book_num desc) b
		           left outer join (select book_num, nvl(to_char(rent_enddate),'o') rent_enddate from rental where rent_startdate in (select max(rent_startdate) from rental group by book_num))  r  
		           on (b.book_num = r.book_num))
		     where rnum > #{ startRowNum } and rnum <= #{ endRowNum }
	]]>
	</select>
	
	<select id="searchAll" parameterType="java.lang.String" resultType="lib.employee.book.model.EmpBookDTO">
		select b.book_num, book_author, book_pub_house, book_name, book_pub_date, book_ISBN, book_apdx_status, book_rsrv_status, book_ctgr_num, book_input_date,
            decode(rent_enddate,'o','대여중','대여가능') rent
			from (select * from book where book_name like #{ searchWord } or book_author like #{ searchWord } or book_pub_house like #{ searchWord }) b 
			left outer join (select book_num, nvl(to_char(rent_enddate),'o') rent_enddate from rental where rent_startdate in (select max(rent_startdate) from rental group by book_num))  r  
			on b.book_num = r.book_num
	</select>
	
	<select id="searchBookName" parameterType="java.lang.String" resultType="lib.employee.book.model.EmpBookDTO">
		select b.book_num, book_author, book_pub_house, book_name, book_pub_date, book_ISBN, book_apdx_status, book_rsrv_status, book_ctgr_num, book_input_date,
            decode(rent_enddate,'o','대여중','대여가능') rent
			from (select * from book where book_name like #{ searchWord }) b 
			left outer join (select book_num, nvl(to_char(rent_enddate),'o') rent_enddate from rental where rent_startdate in (select max(rent_startdate) from rental group by book_num))  r  
			on b.book_num = r.book_num
	</select>
	
	<select id="searchAuthor" parameterType="java.lang.String" resultType="lib.employee.book.model.EmpBookDTO">
		select b.book_num, book_author, book_pub_house, book_name, book_pub_date, book_ISBN, book_apdx_status, book_rsrv_status, book_ctgr_num, book_input_date,
            decode(rent_enddate,'o','대여중','대여가능') rent
			from (select * from book where book_author like #{ searchWord }) b 
			left outer join (select book_num, nvl(to_char(rent_enddate),'o') rent_enddate from rental where rent_startdate in (select max(rent_startdate) from rental group by book_num))  r  
			on b.book_num = r.book_num
	</select>
	
	<select id="searchPub" parameterType="java.lang.String" resultType="lib.employee.book.model.EmpBookDTO">
		select b.book_num, book_author, book_pub_house, book_name, book_pub_date, book_ISBN, book_apdx_status, book_rsrv_status, book_ctgr_num, book_input_date,
            decode(rent_enddate,'o','대여중','대여가능') rent
			from (select * from book where book_pub_house like #{ searchWord }) b 
			left outer join (select book_num, nvl(to_char(rent_enddate),'o') rent_enddate from rental where rent_startdate in (select max(rent_startdate) from rental group by book_num))  r  
			on b.book_num = r.book_num
	</select>
	
	<insert id="insertBook" parameterType="lib.employee.book.model.EmpBookDTO">
		insert into book VALUES ((select nvl(max(book_num)+1,1000001) from book), #{ book_author }, #{ book_name }, #{ book_pub_house }, 
		#{ book_pub_date }, #{ book_ISBN }, #{ book_apdx_status }, #{ book_ctgr_num }, #{ book_rsrv_status }, 0, sysdate )
	</insert>
	
	<delete id="deleteBook" parameterType="lib.employee.book.model.EmpBookDTO">
		delete from book where book_num = #{ book_num }
	</delete>
	
	<update id="updateBook" parameterType="lib.employee.book.model.EmpBookDTO">
		update book set book_author=#{ book_author }, book_name=#{ book_name }, 
			book_pub_house=#{ book_pub_house }, book_pub_date=#{ book_pub_date }, book_ISBN=#{ book_ISBN },
			book_apdx_status=#{ book_apdx_status }, book_ctgr_num=#{ book_ctgr_num }, book_rsrv_status=#{ book_rsrv_status }  
			where book_num = #{ book_num }
	</update>
	
</mapper>