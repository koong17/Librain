<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="lib.employee.book.model.EmpBookDAO">
	
	<update id="returnBook" parameterType="lib.employee.book.model.RentalDTO">
		update rental set rent_enddate = sysdate where book_num = #{ book_num }
	</update>
	
	<insert id="rentBook" parameterType="lib.employee.book.model.RentalDTO">
		insert into rental values((select nvl(max(rent_num)+1,1) from rental), #{ book_num }, #{ mem_id }, sysdate, null, 'X', 'X', '대여중')
	</insert>
	
	<select id="rentMemCheck" resultType="lib.member.model.MemberDTO" parameterType="java.lang.String">
		select * from member where mem_id like #{ mem_id }
	</select>
		
	<select id="rentMemBookCheck" resultType="lib.employee.book.model.EmpBookDTO" parameterType="java.lang.String">
		select * from
		    (select rownum rnum, b.book_num, book_author, book_pub_house, book_name, book_pub_date, book_ISBN, book_apdx_status, book_rsrv_status, book_ctgr_num, book_input_date,
		            decode(rent_enddate,'o','대여중','대여가능') rent
		            from  (select * from book order by book_num desc) b
		            join (select book_num, nvl(to_char(rent_enddate),'o') rent_enddate from rental where rent_startdate in (select max(rent_startdate) from rental group by book_num) 
		                    and rental.mem_id = #{ mem_id } and rental.rent_enddate is null)  r  
		            on (b.book_num = r.book_num))
	</select>	
	
	<select id="rentBookCheck" resultType="lib.employee.book.model.EmpBookDTO" parameterType="int">
		 select * from
		    (select rownum rnum, b.book_num, book_author, book_pub_house, book_name, book_pub_date, book_ISBN, book_apdx_status, book_rsrv_status, book_ctgr_num, book_input_date,
		            decode(rent_enddate,'o','대여중','대여가능') rent
		            from  (select * from book where book_num = #{ book_num }) b
		            left outer join (select book_num, nvl(to_char(rent_enddate),'o') rent_enddate from rental
		            					 where rent_startdate in (select max(rent_startdate) from rental  group by book_num) 
		            					 and rent_num in (select max(rent_num) from rental  group by book_num) ) r  
		            on (b.book_num = r.book_num))
	</select>	
	
	<select id="selectRowNum" resultType="int">
		select nvl(max(rnum),0) from
		    (select rownum rnum, b.book_num, book_author, book_pub_house, book_name, book_pub_date, book_ISBN, book_apdx_status, book_rsrv_status, book_ctgr_num, 
		            decode(rent_enddate,'o','대여중','대여가능') rent
		            from  book b 
		            left outer join (select book_num, nvl(to_char(rent_enddate),'o') rent_enddate from rental where rent_startdate in (select max(rent_startdate) from rental group by book_num))  r  
		            on (b.book_num = r.book_num))
	</select>	
	
	<select id="select" resultType="lib.employee.book.model.EmpBookDTO" parameterType="int">
	<![CDATA[
		select * from
		   (select rownum rnum, b.book_num, book_author, book_pub_house, book_name, book_pub_date, book_ISBN, book_apdx_status, book_rsrv_status, book_ctgr_num, book_input_date,
		           decode(rent_enddate,'o','대여중','대여가능') rent
		           from  (select * from book order by book_num desc) b
		           left outer join (select book_num, nvl(to_char(rent_enddate),'o') rent_enddate from rental where rent_startdate in (select max(rent_startdate) from rental group by book_num))  r  
		           on (b.book_num = r.book_num))
		     where rnum > #{ startRowNum } and rnum <= #{ endRowNum }
		     order by book_num desc
	]]>
	</select>
	
	<select id="searchAll" parameterType="java.lang.String" resultType="lib.employee.book.model.EmpBookDTO">
		select b.book_num, book_author, book_pub_house, book_name, book_pub_date, book_ISBN, book_apdx_status, book_rsrv_status, book_ctgr_num, book_input_date,
            decode(rent_enddate,'o','대여중','대여가능') rent
			from (select * from book where book_name like #{ searchWord } or book_author like #{ searchWord } or book_pub_house like #{ searchWord }) b 
			left outer join (select book_num, nvl(to_char(rent_enddate),'o') rent_enddate from rental where rent_startdate in (select max(rent_startdate) from rental group by book_num))  r  
			on b.book_num = r.book_num
	</select>
	
	<select id="searchBookName" parameterType="java.lang.String" resultType="lib.employee.book.model.EmpBookDTO">
		select b.book_num, book_author, book_pub_house, book_name, book_pub_date, book_ISBN, book_apdx_status, book_rsrv_status, book_ctgr_num, book_input_date,
            decode(rent_enddate,'o','대여중','대여가능') rent
			from (select * from book where book_name like #{ searchWord }) b 
			left outer join (select book_num, nvl(to_char(rent_enddate),'o') rent_enddate from rental where rent_startdate in (select max(rent_startdate) from rental group by book_num))  r  
			on b.book_num = r.book_num
	</select>
	
	<select id="searchAuthor" parameterType="java.lang.String" resultType="lib.employee.book.model.EmpBookDTO">
		select b.book_num, book_author, book_pub_house, book_name, book_pub_date, book_ISBN, book_apdx_status, book_rsrv_status, book_ctgr_num, book_input_date,
            decode(rent_enddate,'o','대여중','대여가능') rent
			from (select * from book where book_author like #{ searchWord }) b 
			left outer join (select book_num, nvl(to_char(rent_enddate),'o') rent_enddate from rental where rent_startdate in (select max(rent_startdate) from rental group by book_num))  r  
			on b.book_num = r.book_num
	</select>
	
	<select id="searchPub" parameterType="java.lang.String" resultType="lib.employee.book.model.EmpBookDTO">
		select b.book_num, book_author, book_pub_house, book_name, book_pub_date, book_ISBN, book_apdx_status, book_rsrv_status, book_ctgr_num, book_input_date,
            decode(rent_enddate,'o','대여중','대여가능') rent
			from (select * from book where book_pub_house like #{ searchWord }) b 
			left outer join (select book_num, nvl(to_char(rent_enddate),'o') rent_enddate from rental where rent_startdate in (select max(rent_startdate) from rental group by book_num))  r  
			on b.book_num = r.book_num
	</select>
	
	<insert id="insertBook" parameterType="lib.employee.book.model.EmpBookDTO">
		insert into book VALUES ((select nvl(max(book_num)+1,100001) from book), #{ book_author }, #{ book_name }, #{ book_pub_house }, 
		#{ book_pub_date }, #{ book_ISBN }, #{ book_apdx_status }, #{ book_ctgr_num }, #{ book_rsrv_status }, 0, sysdate )
	</insert>
	
	<delete id="deleteBook" parameterType="lib.employee.book.model.EmpBookDTO">
		delete from book where book_num = #{ book_num }
	</delete>
	
	<update id="updateBook" parameterType="lib.employee.book.model.EmpBookDTO">
		update book set book_author=#{ book_author }, book_name=#{ book_name }, 
			book_pub_house=#{ book_pub_house }, book_pub_date=#{ book_pub_date }, book_ISBN=#{ book_ISBN },
			book_apdx_status=#{ book_apdx_status }, book_ctgr_num=#{ book_ctgr_num }, book_rsrv_status=#{ book_rsrv_status }  
			where book_num = #{ book_num }
	</update>
	
	<select id="newSelect" resultType="lib.employee.book.model.New_BookDTO">
		select * from new_book
	</select>
	
	<insert id="newInsertBook" parameterType="lib.employee.book.model.New_BookDTO">
		insert into new_book VALUES ((select nvl(max(new_book_num)+1,1) from new_book), #{ book_author }, #{ book_name }, #{ book_pub_house }, #{ book_price }, '요청 완료', sysdate)
	</insert>
	
	<delete id="newDeleteBook" parameterType="lib.employee.book.model.New_BookDTO">
		delete from new_book where new_book_num = #{ new_book_num }
	</delete>
	
	<update id="newUpdateBook" parameterType="lib.employee.book.model.New_BookDTO">
		update new_book set book_author=#{ book_author }, book_name=#{ book_name }, book_pub_house=#{ book_pub_house }, book_price=#{ book_price } 
			where new_book_num = #{ new_book_num }
	</update>
	
	<update id="addRentCnt" parameterType="int">
		update book set book_rent_cnt = book_rent_cnt+1 where book_num = #{ book_num }
	</update>
	
	<select id="disSearch" parameterType="int" resultType="lib.employee.book.model.BookRentDisDTO">
		select t.*,  dis_book_num, dis_input_date, dis_status 
		    from (select b.book_num, book_author, book_pub_house, book_name, book_pub_date, book_ISBN, book_apdx_status, book_rsrv_status, book_ctgr_num, book_input_date, nvl(r.rent_status, '대여가능') rent
	                from  (select * from book where book_num = #{ book_num }) b
	                left outer join rental r
	                on (b.book_num = r.book_num)) t
	                left outer join discard_book d on d.book_num = t.book_num
	</select>
	
	<select id="disSelect"  resultType="lib.employee.book.model.BookRentDisDTO">
		select t.*,  dis_book_num, dis_input_date, dis_status 
		    from (select b.book_num, book_author, book_pub_house, book_name, book_pub_date, book_ISBN, book_apdx_status, book_rsrv_status, book_ctgr_num, book_input_date, nvl(r.rent_status, '대여가능') rent
	                from  (select * from book) b
	                left outer join rental r
	                on (b.book_num = r.book_num)) t
	                join discard_book d on d.book_num = t.book_num
	        order by dis_book_num desc
	</select>
	
	<insert id="disInsertBook" parameterType="lib.employee.book.model.BookRentDisDTO">
		insert into discard_book values((select nvl(max(dis_book_num)+1,1) from discard_book), #{ book_num }, sysdate, '요청 완료')
	</insert>
</mapper>