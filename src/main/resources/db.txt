---- 혜수 20191021  수정 
---- 아예 처음 디비 넣는 분들은 drop 제외하고 하면됩니다!
drop table book_category;
drop table book;
drop table appendix;
drop table rental;
drop table new_book;
drop table discard_book;
drop table reservation;

create table book_category ( --도서분류
    book_ctgr_num varchar2(100) , --분류기호
    book_ctgr_name varchar2(200)  --분류명
    --constraint book_category_num_pk PRIMARY KEY (category_num)
);

create table book ( --도서
    book_num number, --도서번호
    book_author varchar2(50), --저자
    book_name varchar2(200), --도서명
    book_pub_house varchar2(50), --출판사
    book_pub_date date, --발행일
    book_ISBN varchar2(50), --ISBN
    book_apdx_status varchar2(10), --부록여부
    book_ctgr_num varchar2(100), --분류기호
    book_rsrv_status varchar2(50), --예약여부
    book_rent_cnt number, --대출 횟수
    book_input_date date --입력일
    --constraint book_num_pk PRIMARY KEY (book_num) ,
    --constraint book_category_num_fk FOREIGN KEY (category_num)  
    --references book_category (category_num) 
);

insert into book VALUES ((select nvl(max(book_num)+1,100001) from book), 'ㄱㄴㄷ', '가나다', '가나다 출판사', sysdate, '입력', 'X', '1', '예약가능', 0, sysdate );
insert into book VALUES ((select nvl(max(book_num)+1,100001) from book), 'ㄴㄴㄴ', '나나나', '나나나 출판사', sysdate, '입력', 'X', '1', '예약가능', 0, sysdate );
insert into book VALUES ((select nvl(max(book_num)+1,100001) from book), 'ㄷㄷㄷ', '다다다', '다다다 출판사', sysdate, '입력', 'X', '1', '예약가능', 0, sysdate );
insert into book VALUES ((select nvl(max(book_num)+1,100001) from book), 'ㄹㄹㄹ', '라라라', '라라라 출판사', sysdate, '입력', 'X', '1', '예약가능', 0, sysdate );
insert into book VALUES ((select nvl(max(book_num)+1,100001) from book), 'ㄴㄷㄹ', '나다라', '나다라 출판사', sysdate, '입력', 'X', '1', '예약가능', 0, sysdate );

create table appendix ( --부록
    apdx_code varchar(30),--부록코드
    apdx_book_num varchar2(30), --도서번호
    apdx_name varchar(50) --부록명
    --constraint apdx_code_pk PRIMARY KEY (apdx_code) ,
    --constraint appendix_book_name_fk foreign key (book_num)
    --REFERENCES book (book_num)
);

create table rental (
    rent_num number, --대여번호
    book_num number, --도서번호
    mem_id varchar2(20), --회원번호
    rent_startdate date, --대여일
    rent_enddate date, --반납일
    rent_appendix_status varchar2(10), --부록대출여부
    rent_extension varchar2(10), --대여연장
    rent_status varchar2(30)
   -- constraint  rent_num_pk PRIMARY KEY (rent_num),
    --constraint rent_book_num_fk foreign key (book_num) 
    --references book (book_num),
    --constraint rent_fk foreign key (mem_id)   
    --references member (mem_id)
);

create table new_book ( --도서 구입 신청 테이블
    new_book_num number, --신간 신청 번호
    book_author varchar2(50), --저자
    book_name varchar2(200), --도서명
    book_pub_house varchar2(50), --출판사
    book_price number, --도서 가격
    new_status varchar2(20), --신청 승인 상태
    new_input_date date  --신청일
);

create table discard_book ( --도서 폐기 신청 테이블
       dis_book_num number, --폐기 신청 번호
       book_num number, --도서번호
       dis_input_date date, --폐기 신청일
       dis_status varchar2(30) --신청 승인 상태
);

create table appendix ( --부록
    apdx_code varchar(30),--부록코드
    apdx_book_num varchar2(30), --도서번호
    apdx_name varchar(50) --부록명
    --constraint apdx_code_pk PRIMARY KEY (apdx_code) ,
    --constraint appendix_book_name_fk foreign key (book_num)
    --REFERENCES book (book_num)
);

create table reservation (
    rent_num varchar2(30), -- 대여번호
    mem_id varchar2(20), --회원번호
    rsrv_num number(20)   --예약번호
    --constraint reservation_rent_num_fk FOREIGN KEY (rent_num)
    --REFERENCES rental (rent_num),
    --constraint reservation_mem_id_fk FOREIGN KEY (mem_id)
    --REFERENCES member (mem_id)
);

commit;


----수아
create table department (
    dept_code varchar2(20),
    dept_name varchar2(30)
    --CONSTRAINT dept_code_pk PRIMARY KEY(department_code)
);
insert into department values('000', '관장');
insert into department values('001', '총무부');
insert into department values('002', '교육부');
insert into department values('003', '정보부');
commit;

create table sal_check (
    sal_ck_no number,
    emp_no number,
    sal_ck_year varchar2(20),
    sal_ck_month varchar2(20),
    sal_ck_check varchar2(20)
    --constraint pay_no_pk primary key(pay_check_no)
);

create table employee_management(
    emp_no number,
    emp_name varchar2(15),
    emp_telephone varchar2(30),
    emp_address varchar2(200),
    emp_address_number varchar2(20),
    emp_dept_code varchar2(20),
    emp_jumin varchar2(25),
    emp_gender varchar2(10),
    emp_join_date date,
    emp_retire_date date,
    emp_email varchar2(30),
    emp_position varchar2(30),
    emp_basic_pay number,
    emp_bank_name varchar2(50),
    emp_account_number varchar2(30),
    emp_password varchar2(100)
    --CONSTRAINT emp_num_pk PRIMARY KEY(emp_num),
    --constraint emp_dept_fk FOREIGN KEY(department_code) REFERENCES department_table(department_code)
);
insert into employee_management
values(1000001,'강수아','01068618619','서울시,이문동',02451,'000','9501072222222','F',sysdate-3000,null,'koongmom@librain.org','관장',10000000,'하나','111111111111','950107');
insert into employee_management
values(1000002,'이소영','01011111111','서울시,동동동',02451,'001','9901012222222','F',sysdate-2000,null,'soyoung@librain.org','팀장',3000000,'하나','111111111111','990101');
insert into employee_management
values(1000003,'남민지','01022222222','고촌,고촌',02451,'002','9901012222222','F',sysdate-1000,null,'zzangmom@librain.org','팀장',3000000,'하나','111111111111','990101');
insert into employee_management
values(1000004,'문혜수','01033333333','양주,술은 양주가 최고',02451,'002','9901012222222','F',sysdate-2400,null,'hyesudaldal@librain.org','사원',2500000,'하나','111111111111','990101');
insert into employee_management
values(1000005,'박예원','01044444444','예원이집,집집',02451,'003','9901012222222','F',sysdate-1300,null,'nanyewoni@librain.org','팀장',3000000,'하나','111111111111','990101');
insert into employee_management
values(1000006,'김승수','01055555555','종로,비트캠프',02451,'003','9901011222222','M',sysdate-3700,null,'iamseungsu@librain.org','사원',2500000,'하나','111111111111','990101');
commit;

create table commute_management(
    cmt_no number,
    emp_no number,
    cmt_status varchar2(100),
    cmt_year number,
    cmt_month number,
    cmt_DAY number,
    cmt_hour number,
    cmt_minute number,
    cmt_second number
    --CONSTRAINT cmt_no_pk PRIMARY KEY(commute_no)
);

create table salary_management(
    sal_no number,
    emp_no number,
    sal_total number,
    sal_real number,
    sal_national_pension number, -- 국민연금 4.5
    sal_health_insurance number, -- 건강보험 3.23
    sal_longterm_care_insurance number, -- 장기요양 건보 8.51
    sal_employment_insurance number, -- 고용보험 0.65
    sal_income_tax number, -- 소득세 0.7375
    sal_local_income_tax number, -- 소득세 10퍼
    sal_deducted number, -- 공제액 합
    sal_basic_pay number, -- 200만원
    sal_bonus number,
    sal_food_pay number, -- 15만원
    sal_year number,
    sal_month number
    --constraint pay_emp_fk FOREIGN KEY(emp_num) REFERENCES human_resource_management(emp_num)
);

----소영
-- 게시판 테이블 생성
create table board(
board_no number not null,      --게시물 번호
board_title varchar2(200) not null,   --제목
board_content varchar2(4000),      --내용
board_writer varchar2(50) not null,   --이름
board_regdate date default sysdate,   --작성일자
board_updatedate date default sysdate
--,board_viewcnt number default 0   --조회수
);

alter table board add constraint pk_board
primary key (board_no);

create sequence seq_board;
--------------------------------------------------------
--더미 입력
insert into board (board_no, board_title, board_content, board_writer) 
values(seq_board.nextval, '테스트제목', '테스트내용', 'user00');
insert into board (board_no, board_title, board_content, board_writer) 
values(seq_board.nextval, '테스트제목', '테스트내용', 'user00');
insert into board (board_no, board_title, board_content, board_writer) 
values(seq_board.nextval, '테스트제목', '테스트내용', 'user00');
insert into board (board_no, board_title, board_content, board_writer) 
values(seq_board.nextval, '테스트제목', '테스트내용', 'user00');
insert into board (board_no, board_title, board_content, board_writer) 
values(seq_board.nextval, '테스트제목', '테스트내용', 'user00');
insert into board (board_no, board_title, board_content, board_writer) 
values(seq_board.nextval, '테스트제목', '테스트내용', 'user00');
commit;

-----------------------------------
--파일첨부 테이블 생성
create table tbl_attach (
	uuid varchar2(100) not null,
	uploadPath varchar2(200) not null,
	fileName varchar2(100) not null,
	filetype char(1) default 'I',
	board_no number(10,0)
);

alter table tbl_attach add constraint pk_attach primary key(uuid);

--------------------------------------------------------

create table notice( --공지게시판
board_no number not null,      --게시물 번호
board_title varchar2(200) not null,   --제목
board_content varchar2(4000),      --내용
board_writer varchar2(50) not null,   --이름
board_regdate date default sysdate,   --작성일자
board_updatedate date default sysdate
);


alter table notice add constraint pk_notice
primary key (board_no);

-------------- 더미 입력
insert into notice (board_no, board_title, board_content, board_writer) 
values(seq_board.nextval, '필독', '공지사항을 꾸준히 확인하세요', 'admin');
commit;
insert into notice (board_no, board_title, board_content, board_writer) 
values(seq_board.nextval, '필독!!', '공지사항을 꾸준히 확인하세요', 'admin');
commit;
insert into notice (board_no, board_title, board_content, board_writer) 
values(seq_board.nextval, 'Librain 프로그램 사전 교육[파일첨부]', '꼭 읽기', 'admin');
commit;
-------------------승수 
create table Facilities( --시설물
Fac_serialnum number  ,          --일련번호 PK
Fac_name varchar2(30),         -- 시설물 
Fac_address varchar2(30) ,   --위치
Fac_status varchar2(30),
Fac_category varchar2(30)
);

create table Facilities_inspection(   --시설물 점검
FacIn_serialnum  number ,                           --점검한것 Facilities의 fk
FacIn_name varchar2(30),    
FacIn_INSPECTION_DATE date default sysdate,    -- 점검일 
FacIn_INSPECTION_DUE_DATE date
);
create table pay_management(
    pay_no number,
    pay_emp_no varchar2(10),
    pay_division varchar2(20),
    pay_total_pay number,
    pay_real_pay number,
    pay_income_tax number,
    pay_residence_tax number,
    pay_health_insurance number,
    pay_unemployment_insurance number,
    pay_nation_pension number,
    pay_etx_pay number,
    pay_basic_pay number,
    pay_bonus number,
    pay_incentive_pay number,
    pay_food_pay number,
    pay_transportation_pay number
    --constraint pay_emp_fk FOREIGN KEY(emp_num) REFERENCES human_resource_management(emp_num)
);

drop table member;

create table member( -- 회원
    mem_id varchar2(50), --회원아이디
    mem_pw varchar2(50), --회원비밀번호
    mem_name varchar2(30), --회원이름
    mem_jumin varchar2(30), --주민번호
    mem_address varchar2(200), --회원주소
    mem_address_number varchar2(20), --우편번호
    mem_phone varchar2(50), --회원폰번호
    mem_email varchar2(50), --회원이메일
    mem_rank number default 2 -- 권한 변경(1. 블랙리스트/ 2. 일반회원/ 3. 국가유공자)
   --constraint member_pk primary key (mem_id)
);

insert into member(mem_id,mem_pw,mem_name,mem_jumin,mem_address,mem_address_number,mem_phone,mem_email) values('nmj', '1234', '남민지', '930729-2111111', '경기도 김포시 고촌읍 수기로 67-50, 119동 802호', '10130', '010-8534-0280', 'ming_0729@naver.com');
insert into member(mem_id,mem_pw,mem_name,mem_jumin,mem_address,mem_address_number,mem_phone,mem_email) values('pyw', '4321', '박예원', '971111-2111111', '서울시 종로구 비트캠프', '010-1111-1111', '11111', 'pyw@naver.com');
insert into member(mem_id,mem_pw,mem_name,mem_jumin,mem_address,mem_address_number,mem_phone,mem_email) values('captainss', '1234', '김승수', '931013-1111111', '서울시 종로구의 어느 고시원', '01111', '010-2222-2222', 'kss@naver.com');

commit;
